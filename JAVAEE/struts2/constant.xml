<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.1.7//EN" "http://struts.apache.org/dtds/struts-2.1.7.dtd">
<struts>
	<!-- 指定Web应用的默认编码集，相当于调用HttpServletRequest的setCharacterEncoding方法 -->
	<constant name="struts.i18n.encoding" value="UTF-8" />
	<!-- 
	该属性指定需要Struts 2处理的请求后缀，该属性的默认值是action，即所有匹配*.action的请求都由Struts 2处理。
	如果用户需要指定多个请求后缀，则多个后缀之间以英文逗号（，）隔开。
	 -->
	<constant name="struts.action.extension" value="do" />
    <!-- 设置浏览器是否缓存静态内容，默认值为true（生产环境下使用），开发阶段最好关闭 -->
    <constant name="struts.serve.static.browserCache " value="false" />
    <!-- 当struts的配置文件修改后，系统是否自动重新加载该文件，默认值为false（生产环境下使用），开发阶段最好打开 -->
    <constant name="struts.configuration.xml.reload" value="true" />
    <!-- 开发模式下使用，这样可以打印出更详细的错误信息 -->
    <constant name="struts.devMode" value="true" />
    <!-- 默认的视图主题 -->
    <constant name="struts.ui.theme" value="simple" />
    <!-- 该属性指定Struts 2中的action由Spring容器创建  -->
    <constant name="struts.objectFactory" value="spring" />
	<!-- 该属性设置Struts 2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false。  -->
	<constant name="struts.enable.DynamicMethodInvocation" value="false" />
    <constant name="struts.ognl.allowStaticMethodAccess" value="true" />
    <constant name="struts.convention.default.parent.package" value="crud-default" />
	<!-- 该属性设置Struts 2是否允许在Action名中使用斜线，该属性的默认值是false。如果开发者希望允许在Action名中使用斜线，则可设置该属性为true。  -->
    <constant name="struts.enable.SlashesInActionNames " value="true" />
	<!-- 该属性设置是否每次HTTP请求到达时，系统都重新加载资源文件。该属性默认值是false。在开发阶段将该属性设置为true会更有利于开发，但在产品发布阶段应将该属性设置为false。  -->
    <constant name="struts.i18n.reload " value="true" />
	<!-- 该属性指定视图标签默认的视图主题，该属性的默认值是xhtml。  -->
    <constant name="struts.ui.theme " value="simple" />
	<!-- 该属性指定视图主题所需要模板文件的位置，该属性的默认值是template，即默认加载template路径下的模板文件。  -->
    <constant name="struts.ui.templateDir " value="template" />

struts.ui.templateSuffix
该属性指定模板文件的后缀，该属性的默认属性值是ftl。该属性还允许使用ftl、vm或jsp，分别对应FreeMarker、Velocity和JSP模板。
struts.configuration.xml.reload
该属性设置当struts.xml文件改变后，系统是否自动重新加载该文件。该属性的默认值是false。
struts.velocity.configfile
该属性指定Velocity框架所需的velocity.properties文件的位置。该属性的默认值为velocity.properties。
struts.velocity.contexts
该属性指定Velocity框架的Context位置，如果该框架有多个Context，则多个Context之间以英文逗号（,）隔开。
struts.velocity.toolboxlocation
该属性指定Velocity框架的toolbox的位置。
struts.url.http.port
该属性指定Web应用所在的监听端口。该属性通常没有太大的用户，只是当Struts 2需要生成URL时（例如Url标签），该属性才提供Web应用的默认端口。
struts.url.https.port
该属性类似于struts.url.http.port属性的作用，区别是该属性指定的是Web应用的加密服务端口。
struts.url.includeParams
该属性指定Struts 2生成URL时是否包含请求参数。该属性接受none、get和all三个属性值，分别对应于不包含、仅包含GET类型请求参数和包含全部请求参数。
struts.custom.i18n.resources
该属性指定Struts 2应用所需要的国际化资源文件，如果有多份国际化资源文件，则多个资源文件的文件名以英文逗号（,）隔开。
struts.dispatcher.parametersWorkaround
对于某些Java EE服务器，不支持HttpServlet Request调用getParameterMap()方法，此时可以设置该属性值为true来解决该问题。该属性的默认值是false。对于WebLogic、Orion和OC4J服务器，通常应该设置该属性为true。
struts.freemarker.manager.classname
该属性指定Struts 2使用的FreeMarker管理器。该属性的默认值是org.apache.struts2.views.freemarker.FreemarkerManager，这是Struts 2内建的FreeMarker管理器。
struts.freemarker.wrapper.altMap
该属性只支持true和false两个属性值，默认值是true。通常无需修改该属性值。
struts.xslt.nocache
该属性指定XSLT Result是否使用样式表缓存。当应用处于开发阶段时，该属性通常被设置为true；当应用处于产品使用阶段时，该属性通常被设置为false。
struts.configuration.files
该属性指定Struts 2框架默认加载的配置文件，如果需要指定默认加载多个配置文件，则多个配置文件的文件名之间以英文逗号（,）隔开。该属性的默认值为struts-default.xml,struts-plugin.xml,struts.xml，看到该属性值，读者应该明白为什么Struts 2框架默认加载struts.xml文件了。
struts.objectFactory
该属性指定Struts 2中的action由哪个容器创建 	




       <interceptors>
           <!-- 配置注解拦截器 --> 
           <interceptor name="befor" class="cn.gov.cbrc.disclosure.action.interceptor.RequestBefor"/>   
           <interceptor-stack name="annotatedStack">
			   <interceptor-ref name="store">
	                   <param name="operationMode">AUTOMATIC</param>
	           </interceptor-ref>
	           <interceptor-ref name="paramsPrepareParamsStack" />
			   <interceptor-ref name="befor" />
	           <interceptor-ref name="defaultStack" />
           </interceptor-stack>
       </interceptors>
	   <default-interceptor-ref name="annotatedStack"></default-interceptor-ref>




       <global-results>
    		<result name="login">/login.html</result> 
    		<result name="error">/error.jsp</result>
    		<!-- 
    		<result name="chartConvert" type="chain"> 
    			<param name="actionName">chartConvert</param>
    		</result> 
    	 	-->
       </global-results>	
	
</struts>